"id","amount_select","appears_on_payslip","category_id/id","code","condition_select","register_id/id","note","amount_fix","name","parent_rule_id/id","amount_percentage","amount_percentage_base","amount_python_compute","condition_python","quantity","condition_range","sequence"
"__export__.hr_salary_rule_56","Python Code","True","__export__.hr_salary_rule_category_19","TICHM","Always True","","","","Tichete de Masă","","","","result_qty = worked_days.WORK100.number_of_days result = inputs.TICHM.amount"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  t1 = employee.get_company and employee.get_company.meal_voucher_value or False int = contract.advantage_ids.search([('contract_id', '=', 7), ('code', '=', 'TICHM')]) t2 = int.id and True or False result = bool(t1 and t2)","1.0","contract.wage","20"
"__export__.hr_salary_rule_57","Python Code","True","hr_payroll.BASIC","SALINC","Always True","","","","Salariu de Încadrare","","","","result = contract.wage"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","1.0","contract.wage","1"
"__export__.hr_salary_rule_58","Python Code","True","__export__.hr_salary_rule_category_13","SR","Always True","","","","Salariu Realizat","","","","result_qty =1 result = round( working_days_hours[0] * worked_days.WORK100.number_of_days)"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","1.0","contract.wage","5"
